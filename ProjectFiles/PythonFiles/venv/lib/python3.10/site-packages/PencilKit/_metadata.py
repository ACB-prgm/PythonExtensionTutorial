# This file is generated by objective.metadata
#
# Last update: Fri Aug 12 15:24:55 2022
#
# flake8: noqa

import objc, sys
from typing import NewType

if sys.maxsize > 2**32:

    def sel32or64(a, b):
        return b

else:

    def sel32or64(a, b):
        return a


if objc.arch == "arm64":

    def selAorI(a, b):
        return a

else:

    def selAorI(a, b):
        return b


misc = {}
constants = (
    """$PKAppleDrawingTypeIdentifier$PKInkTypeMarker$PKInkTypePen$PKInkTypePencil$"""
)
enums = """$PKEraserTypeBitmap@1$PKEraserTypeVector@0$"""
misc.update({"PKEraserType": NewType("PKEraserType", int)})
misc.update({"PKInkType": NewType("PKInkType", str)})
misc.update({})
r = objc.registerMetaDataForSelector
objc._updatingMetadata(True)
try:
    r(b"PKDrawing", b"initWithData:error:", {"arguments": {3: {"type_modifier": b"o"}}})
    r(
        b"PKStrokePath",
        b"enumerateInterpolatedPointsInRange:strideByDistance:usingBlock:",
        {
            "arguments": {
                4: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"@"},
                            2: {"type": b"o^Z"},
                        },
                    }
                }
            }
        },
    )
    r(
        b"PKStrokePath",
        b"enumerateInterpolatedPointsInRange:strideByParametricStep:usingBlock:",
        {
            "arguments": {
                4: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"@"},
                            2: {"type": b"o^Z"},
                        },
                    }
                }
            }
        },
    )
    r(
        b"PKStrokePath",
        b"enumerateInterpolatedPointsInRange:strideByTime:usingBlock:",
        {
            "arguments": {
                4: {
                    "callable": {
                        "retval": {"type": b"v"},
                        "arguments": {
                            0: {"type": b"^v"},
                            1: {"type": b"@"},
                            2: {"type": b"o^Z"},
                        },
                    }
                }
            }
        },
    )
finally:
    objc._updatingMetadata(False)
expressions = {}

# END OF FILE
